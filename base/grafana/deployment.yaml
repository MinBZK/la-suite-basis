apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/component: grafana
      name: deployment
    securityContext:
      fsGroup: 472
      runAsUser: 472
      runAsGroup: 0
    spec:
      initContainers:
        - command:
            - chown
            - -R
            - 472:472
            - /var/lib/grafana
          image: docker.io/library/busybox:1.37.0
          name: grafana-chown
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
      containers:
        - args:
            - -config=/etc/grafana/grafana.ini
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          env:
            - name: TMPDIR
              value: /var/lib/grafana
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: GF_SECURITY_ADMIN_USER
                  name: grafana-auth
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: GF_SECURITY_ADMIN_PASSWORD
                  name: grafana-auth
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
                  name: grafana-auth
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                  name: grafana-auth
          image: docker.io/grafana/grafana:11.4.0
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana-http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
          volumeMounts:
            - mountPath: /etc/grafana/
              name: grafana-ini
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /var/log/grafana
              name: grafana-logs
      volumes:
        - configMap:
            defaultMode: 420
            name: grafana-ini
          name: grafana-ini
        - emptyDir: {}
          name: grafana-logs
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc
